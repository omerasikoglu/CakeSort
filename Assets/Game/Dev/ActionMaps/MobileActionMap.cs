//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Game/Dev/ActionMaps/MobileActionMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace CakeSort.Input
{
    public partial class @MobileActionMap: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @MobileActionMap()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""MobileActionMap"",
    ""maps"": [
        {
            ""name"": ""CoreLoopMap"",
            ""id"": ""d1669231-1195-41d8-b874-207abe226d37"",
            ""actions"": [
                {
                    ""name"": ""Touch"",
                    ""type"": ""Value"",
                    ""id"": ""09509a72-138b-4e20-ad94-91b7a9ab7545"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tap"",
                    ""type"": ""Button"",
                    ""id"": ""fb9109f0-d280-42f5-b2f7-d71607c10f1c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DoubleTap"",
                    ""type"": ""Button"",
                    ""id"": ""4fbc06fc-9d1f-41fc-8a7f-4ba578fe7831"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""MultiTap(tapDelay=0.2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hold"",
                    ""type"": ""Button"",
                    ""id"": ""584dfd52-6018-4278-b167-8ebd93cb0229"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slide"",
                    ""type"": ""Value"",
                    ""id"": ""304b7929-9c60-4393-84a7-39a75e5c703a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Swipe"",
                    ""type"": ""Value"",
                    ""id"": ""beb1eb86-d177-48b4-9585-747612d07edc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""FirstTouch"",
                    ""type"": ""Value"",
                    ""id"": ""894cde46-e163-40cd-8557-ee63ba14fc94"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchContact"",
                    ""type"": ""Button"",
                    ""id"": ""14cd3ef2-854d-4b66-a7a6-6334304088ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FirstTouchPosition"",
                    ""type"": ""Value"",
                    ""id"": ""bda530df-567c-41a5-b4da-158031dbaac4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Delta"",
                    ""type"": ""Value"",
                    ""id"": ""45b2393c-0cd3-4668-971b-b5a26b7ab8ad"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""963a2517-110c-4f65-af76-476cedab760f"",
                    ""path"": ""<Touchscreen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Touch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc45a627-39a1-401a-a400-126dec27a23a"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d0b0e5f-7675-4d74-801d-7c89369894bf"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""158b7174-2753-482f-a22e-e9b3df1b5a39"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Swipe"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6b31595c-3067-4579-a2a1-a3ab50ed1455"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TouchContact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3092c259-1c1e-43aa-a481-a73db60f052c"",
                    ""path"": ""<Touchscreen>/primaryTouch/startPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstTouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56f0b996-a45e-4a28-b144-7feff889012f"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5a3b6a5-4a23-484a-9896-9fb1d6117439"",
                    ""path"": ""<Touchscreen>/primaryTouch/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hold"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbaa66e9-2c66-45d9-b4a9-e5b2e08329ab"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DoubleTap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aefe6d51-66e4-44c5-9c61-f65892c538e5"",
                    ""path"": ""<Touchscreen>/primaryTouch/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirstTouchPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1605b2d2-2964-4f8f-8d16-84dd94a28b31"",
                    ""path"": ""<Touchscreen>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Delta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // CoreLoopMap
            m_CoreLoopMap = asset.FindActionMap("CoreLoopMap", throwIfNotFound: true);
            m_CoreLoopMap_Touch = m_CoreLoopMap.FindAction("Touch", throwIfNotFound: true);
            m_CoreLoopMap_Tap = m_CoreLoopMap.FindAction("Tap", throwIfNotFound: true);
            m_CoreLoopMap_DoubleTap = m_CoreLoopMap.FindAction("DoubleTap", throwIfNotFound: true);
            m_CoreLoopMap_Hold = m_CoreLoopMap.FindAction("Hold", throwIfNotFound: true);
            m_CoreLoopMap_Slide = m_CoreLoopMap.FindAction("Slide", throwIfNotFound: true);
            m_CoreLoopMap_Swipe = m_CoreLoopMap.FindAction("Swipe", throwIfNotFound: true);
            m_CoreLoopMap_FirstTouch = m_CoreLoopMap.FindAction("FirstTouch", throwIfNotFound: true);
            m_CoreLoopMap_TouchContact = m_CoreLoopMap.FindAction("TouchContact", throwIfNotFound: true);
            m_CoreLoopMap_FirstTouchPosition = m_CoreLoopMap.FindAction("FirstTouchPosition", throwIfNotFound: true);
            m_CoreLoopMap_Delta = m_CoreLoopMap.FindAction("Delta", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // CoreLoopMap
        private readonly InputActionMap m_CoreLoopMap;
        private List<ICoreLoopMapActions> m_CoreLoopMapActionsCallbackInterfaces = new List<ICoreLoopMapActions>();
        private readonly InputAction m_CoreLoopMap_Touch;
        private readonly InputAction m_CoreLoopMap_Tap;
        private readonly InputAction m_CoreLoopMap_DoubleTap;
        private readonly InputAction m_CoreLoopMap_Hold;
        private readonly InputAction m_CoreLoopMap_Slide;
        private readonly InputAction m_CoreLoopMap_Swipe;
        private readonly InputAction m_CoreLoopMap_FirstTouch;
        private readonly InputAction m_CoreLoopMap_TouchContact;
        private readonly InputAction m_CoreLoopMap_FirstTouchPosition;
        private readonly InputAction m_CoreLoopMap_Delta;
        public struct CoreLoopMapActions
        {
            private @MobileActionMap m_Wrapper;
            public CoreLoopMapActions(@MobileActionMap wrapper) { m_Wrapper = wrapper; }
            public InputAction @Touch => m_Wrapper.m_CoreLoopMap_Touch;
            public InputAction @Tap => m_Wrapper.m_CoreLoopMap_Tap;
            public InputAction @DoubleTap => m_Wrapper.m_CoreLoopMap_DoubleTap;
            public InputAction @Hold => m_Wrapper.m_CoreLoopMap_Hold;
            public InputAction @Slide => m_Wrapper.m_CoreLoopMap_Slide;
            public InputAction @Swipe => m_Wrapper.m_CoreLoopMap_Swipe;
            public InputAction @FirstTouch => m_Wrapper.m_CoreLoopMap_FirstTouch;
            public InputAction @TouchContact => m_Wrapper.m_CoreLoopMap_TouchContact;
            public InputAction @FirstTouchPosition => m_Wrapper.m_CoreLoopMap_FirstTouchPosition;
            public InputAction @Delta => m_Wrapper.m_CoreLoopMap_Delta;
            public InputActionMap Get() { return m_Wrapper.m_CoreLoopMap; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(CoreLoopMapActions set) { return set.Get(); }
            public void AddCallbacks(ICoreLoopMapActions instance)
            {
                if (instance == null || m_Wrapper.m_CoreLoopMapActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_CoreLoopMapActionsCallbackInterfaces.Add(instance);
                @Touch.started += instance.OnTouch;
                @Touch.performed += instance.OnTouch;
                @Touch.canceled += instance.OnTouch;
                @Tap.started += instance.OnTap;
                @Tap.performed += instance.OnTap;
                @Tap.canceled += instance.OnTap;
                @DoubleTap.started += instance.OnDoubleTap;
                @DoubleTap.performed += instance.OnDoubleTap;
                @DoubleTap.canceled += instance.OnDoubleTap;
                @Hold.started += instance.OnHold;
                @Hold.performed += instance.OnHold;
                @Hold.canceled += instance.OnHold;
                @Slide.started += instance.OnSlide;
                @Slide.performed += instance.OnSlide;
                @Slide.canceled += instance.OnSlide;
                @Swipe.started += instance.OnSwipe;
                @Swipe.performed += instance.OnSwipe;
                @Swipe.canceled += instance.OnSwipe;
                @FirstTouch.started += instance.OnFirstTouch;
                @FirstTouch.performed += instance.OnFirstTouch;
                @FirstTouch.canceled += instance.OnFirstTouch;
                @TouchContact.started += instance.OnTouchContact;
                @TouchContact.performed += instance.OnTouchContact;
                @TouchContact.canceled += instance.OnTouchContact;
                @FirstTouchPosition.started += instance.OnFirstTouchPosition;
                @FirstTouchPosition.performed += instance.OnFirstTouchPosition;
                @FirstTouchPosition.canceled += instance.OnFirstTouchPosition;
                @Delta.started += instance.OnDelta;
                @Delta.performed += instance.OnDelta;
                @Delta.canceled += instance.OnDelta;
            }

            private void UnregisterCallbacks(ICoreLoopMapActions instance)
            {
                @Touch.started -= instance.OnTouch;
                @Touch.performed -= instance.OnTouch;
                @Touch.canceled -= instance.OnTouch;
                @Tap.started -= instance.OnTap;
                @Tap.performed -= instance.OnTap;
                @Tap.canceled -= instance.OnTap;
                @DoubleTap.started -= instance.OnDoubleTap;
                @DoubleTap.performed -= instance.OnDoubleTap;
                @DoubleTap.canceled -= instance.OnDoubleTap;
                @Hold.started -= instance.OnHold;
                @Hold.performed -= instance.OnHold;
                @Hold.canceled -= instance.OnHold;
                @Slide.started -= instance.OnSlide;
                @Slide.performed -= instance.OnSlide;
                @Slide.canceled -= instance.OnSlide;
                @Swipe.started -= instance.OnSwipe;
                @Swipe.performed -= instance.OnSwipe;
                @Swipe.canceled -= instance.OnSwipe;
                @FirstTouch.started -= instance.OnFirstTouch;
                @FirstTouch.performed -= instance.OnFirstTouch;
                @FirstTouch.canceled -= instance.OnFirstTouch;
                @TouchContact.started -= instance.OnTouchContact;
                @TouchContact.performed -= instance.OnTouchContact;
                @TouchContact.canceled -= instance.OnTouchContact;
                @FirstTouchPosition.started -= instance.OnFirstTouchPosition;
                @FirstTouchPosition.performed -= instance.OnFirstTouchPosition;
                @FirstTouchPosition.canceled -= instance.OnFirstTouchPosition;
                @Delta.started -= instance.OnDelta;
                @Delta.performed -= instance.OnDelta;
                @Delta.canceled -= instance.OnDelta;
            }

            public void RemoveCallbacks(ICoreLoopMapActions instance)
            {
                if (m_Wrapper.m_CoreLoopMapActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(ICoreLoopMapActions instance)
            {
                foreach (var item in m_Wrapper.m_CoreLoopMapActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_CoreLoopMapActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public CoreLoopMapActions @CoreLoopMap => new CoreLoopMapActions(this);
        public interface ICoreLoopMapActions
        {
            void OnTouch(InputAction.CallbackContext context);
            void OnTap(InputAction.CallbackContext context);
            void OnDoubleTap(InputAction.CallbackContext context);
            void OnHold(InputAction.CallbackContext context);
            void OnSlide(InputAction.CallbackContext context);
            void OnSwipe(InputAction.CallbackContext context);
            void OnFirstTouch(InputAction.CallbackContext context);
            void OnTouchContact(InputAction.CallbackContext context);
            void OnFirstTouchPosition(InputAction.CallbackContext context);
            void OnDelta(InputAction.CallbackContext context);
        }
    }
}
